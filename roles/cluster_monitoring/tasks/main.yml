---
- name: Check if cluster-monitoring repo already exists.
  stat:
    path: ~/cluster-monitoring/vars.jsonnet
  register: vars_file_exists

- name: Retrieve and template cluster-monitoring manifests.
  block:
    - name: Clone the cluster-monitoring project.
      git:
        repo: https://github.com/carlosedp/cluster-monitoring.git
        dest: ~/cluster-monitoring
        version: "{{ cluster_monitoring_version }}"
        force: yes

    - name: Place our templated vars.jsonnet file.
      template:
        src: vars.jsonnet.j2
        dest: ~/cluster-monitoring/vars.jsonnet

    - name: Place our templated base_operator_stack.jsonnet file.
      template:
        src: base_operator_stack.jsonnet.j2
        dest: ~/cluster-monitoring/base_operator_stack.jsonnet
      when: unifi_poller | bool

    - name: Run 'vendor' cluster-monitoring target.
      make:
        chdir: ~/cluster-monitoring
        target: vendor

    - name: Run 'make' to generate all the K8s manifests.
      make:
        chdir: ~/cluster-monitoring

    - name: Download grafana dashboard from grafana.net to local directory
      command: >
        curl --fail --compressed
        https://grafana.com/api/dashboards/{{ item.dashboard_id }}/revisions/{{ item.revision_id }}/download
        -o ~/cluster-monitoring/grafana-dashboards/{{ item.dashboard_id }}.json
      args:
        creates: "~/cluster-monitoring/grafana-dashboards/{{ item.dashboard_id }}.json"
        warn: false
      register: _download_dashboards
      until: _download_dashboards is succeeded
      retries: 5
      delay: 2
      with_items: "{{ grafana_dashboards }}"
      when: grafana_dashboards | length > 0 and unifi_poller | bool
      changed_when: false
      check_mode: false
      tags:
        - skip_ansible_lint

  become: false
  when: >
    not vars_file_exists.stat.exists
    or cluster_monitoring_update_repo | bool

- name: Find all the manifests in the manifests/setup directory.
  find:
    paths: ~/cluster-monitoring/manifests/setup
    file_type: file
    patterns: '*.yaml,*.yml'
  register: cluster_monitoring_setup_files

- name: Apply cluster-monitoring setup manifests.
  k8s:
    src: "{{ item }}"
    state: present
  loop: "{{ cluster_monitoring_setup_files.files | sort(attribute='path') | map(attribute='path') | list }}"

- name: Find all the manifests in the manifests directory.
  find:
    paths: ~/cluster-monitoring/manifests
    file_type: file
    patterns: '*.yaml,*.yml'
  register: cluster_monitoring_files

- name: Apply cluster-monitoring manifests.
  k8s:
    src: "{{ item }}"
    state: present
  loop: "{{ cluster_monitoring_files.files | sort(attribute='path') | map(attribute='path') | list }}"
